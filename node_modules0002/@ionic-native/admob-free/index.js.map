{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/admob-free/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\n\nexport interface AdMobFreeBannerConfig {\n  /**\n   * Ad Unit ID\n   */\n  id?: string;\n  /**\n   * Receiving test ad\n   */\n  isTesting?: boolean;\n  /**\n   * Auto show ad when loaded\n   */\n  autoShow?: boolean;\n  /**\n   * Set to true, to put banner at top\n   */\n  bannerAtTop?: boolean;\n  /**\n   * Set to true, to allow banner overlap WebView\n   */\n  overlap?: boolean;\n  /**\n   * Set to true to avoid ios7 status bar overlap\n   */\n  offsetTopBar?: boolean;\n  /**\n   * Banner  size\n   */\n  size?: string;\n}\n\nexport interface AdMobFreeInterstitialConfig {\n  /**\n   * Ad Unit ID\n   */\n  id?: string;\n  /**\n   * Receiving test ad\n   */\n  isTesting?: boolean;\n  /**\n   * Auto show ad when loaded\n   */\n  autoShow?: boolean;\n}\n\nexport interface AdMobFreeRewardVideoConfig {\n  /**\n   * Ad Unit ID\n   */\n  id?: string;\n  /**\n   * Receiving test ad\n   */\n  isTesting?: boolean;\n  /**\n   * Auto show ad when loaded\n   */\n  autoShow?: boolean;\n}\n\n/**\n * @name AdMob Free\n * @description\n * A free, no ad-sharing version of Google AdMob plugin for Cordova.\n *\n * Requires Cordova plugin: `cordova-plugin-admob-free`. For more info, please see the [AdMob Free plugin docs](https://github.com/ratson/cordova-plugin-admob-free).\n *\n * @usage\n * ```typescript\n * import { AdMobFree, AdMobFreeBannerConfig } from '@ionic-native/admob-free';\n *\n *\n * constructor(private admobFree: AdMobFree) { }\n *\n *\n * ...\n *\n *\n * const bannerConfig: AdMobFreeBannerConfig = {\n *  // add your config here\n *  // for the sake of this example we will just use the test config\n *  isTesting: true,\n *  autoShow: true\n * };\n * this.admobFree.banner.config(bannerConfig);\n *\n * this.admobFree.banner.prepare()\n *   .then(() => {\n *     // banner Ad is ready\n *     // if we set autoShow to false, then we will need to call the show method here\n *   })\n *   .catch(e => console.log(e));\n *\n *\n * ```\n * @interfaces\n * AdMobFreeBannerConfig\n * AdMobFreeInterstitialConfig\n * AdMobFreeRewardVideoConfig\n * @classes\n * AdMobFreeBanner\n * AdMobFreeInterstitial\n * AdMobFreeRewardVideo\n */\n@Plugin({\n  pluginName: 'AdMobFree',\n  plugin: 'cordova-plugin-admob-free',\n  pluginRef: 'admob',\n  repo: 'https://github.com/ratson/cordova-plugin-admob-free',\n  platforms: ['Android', 'iOS']\n})\n@Injectable()\nexport class AdMobFree extends IonicNativePlugin {\n  /**\n   * Convenience object to get event names\n   * @type {Object}\n   */\n  events = {\n    BANNER_LOAD: 'admob.banner.events.LOAD',\n    BANNER_LOAD_FAIL: 'admob.banner.events.LOAD_FAIL',\n    BANNER_OPEN: 'admob.banner.events.OPEN',\n    BANNER_CLOSE: 'admob.banner.events.CLOSE',\n    BANNER_EXIT_APP: 'admob.banner.events.EXIT_APP',\n\n    INTERSTITIAL_LOAD: 'admob.interstitial.events.LOAD',\n    INTERSTITIAL_LOAD_FAIL: 'admob.interstitial.events.LOAD_FAIL',\n    INTERSTITIAL_OPEN: 'admob.interstitial.events.OPEN',\n    INTERSTITIAL_CLOSE: 'admob.interstitial.events.CLOSE',\n    INTERSTITIAL_EXIT_APP: 'admob.interstitial.events.EXIT_APP',\n\n    REWARD_VIDEO_LOAD: 'admob.rewardvideo.events.LOAD',\n    REWARD_VIDEO_LOAD_FAIL: 'admob.rewardvideo.events.LOAD_FAIL',\n    REWARD_VIDEO_OPEN: 'admob.rewardvideo.events.OPEN',\n    REWARD_VIDEO_CLOSE: 'admob.rewardvideo.events.CLOSE',\n    REWARD_VIDEO_EXIT_APP: 'admob.rewardvideo.events.EXIT_APP',\n    REWARD_VIDEO_START: 'admob.rewardvideo.events.START',\n    REWARD_VIDEO_REWARD: 'admob.rewardvideo.events.REWARD'\n  };\n\n  /**\n   * Watch an event\n   * @param event {string} event name\n   * @return {Observable<any>}\n   */\n  on(event: string): Observable<any> {\n    return fromEvent(document, event);\n  }\n\n  /**\n   * Returns the AdMobFreeBanner object\n   * @type {AdMobFreeBanner}\n   */\n  banner: AdMobFreeBanner = new AdMobFreeBanner();\n\n  /**\n   * Returns the AdMobFreeInterstitial object\n   * @type {AdMobFreeInterstitial}\n   */\n  interstitial: AdMobFreeInterstitial = new AdMobFreeInterstitial();\n\n  /**\n   * Returns the AdMobFreeRewardVideo object\n   * @type {AdMobFreeRewardVideo}\n   */\n  rewardVideo: AdMobFreeRewardVideo = new AdMobFreeRewardVideo();\n}\n\n/**\n * @hidden\n */\n@Plugin({\n  pluginName: 'AdMobFree',\n  plugin: 'cordova-plugin-admob-free',\n  pluginRef: 'admob.banner'\n})\nexport class AdMobFreeBanner {\n  /**\n   * Update config\n   * @param options\n   * @return {AdMobFreeBannerConfig}\n   */\n  @Cordova({ sync: true })\n  config(options: AdMobFreeBannerConfig): AdMobFreeBannerConfig {\n    return;\n  }\n\n  /**\n   * Hide the banner\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  hide(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Create banner\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  prepare(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Remove the banner\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  remove(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Show the banner\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  show(): Promise<any> {\n    return;\n  }\n}\n\n/**\n * @hidden\n */\n@Plugin({\n  pluginName: 'AdMobFree',\n  plugin: 'cordova-plugin-admob-free',\n  pluginRef: 'admob.interstitial'\n})\nexport class AdMobFreeInterstitial {\n  /**\n   * Update config\n   * @param options\n   * @return {AdMobFreeInterstitialConfig}\n   */\n  @Cordova({ sync: true })\n  config(options: AdMobFreeInterstitialConfig): AdMobFreeInterstitialConfig {\n    return;\n  }\n\n  /**\n   * Check if interstitial is ready\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  isReady(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Prepare interstitial\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  prepare(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Show the interstitial\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  show(): Promise<any> {\n    return;\n  }\n}\n\n/**\n * @hidden\n */\n@Plugin({\n  pluginName: 'AdMobFree',\n  plugin: 'cordova-plugin-admob-free',\n  pluginRef: 'admob.rewardvideo'\n})\nexport class AdMobFreeRewardVideo {\n  /**\n   * Update config\n   * @param {AdMobFreeRewardVideoConfig} options Admob reward config\n   * @return {AdMobFreeRewardVideoConfig}\n   */\n  @Cordova({ sync: true })\n  config(options: AdMobFreeRewardVideoConfig): AdMobFreeRewardVideoConfig {\n    return;\n  }\n\n  /**\n   * Check if reward video is ready\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  isReady(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Prepare reward video\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  prepare(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Show the reward video\n   * @return {Promise<any>}\n   */\n  @Cordova({ otherPromise: true })\n  show(): Promise<any> {\n    return;\n  }\n}\n"]}